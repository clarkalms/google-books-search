{"version":3,"sources":["components/Jumbotron/index.js","components/Card/index.js","components/Form/index.js","components/List/index.js","components/Grid/index.js","components/Book/index.js","components/Footer/index.js","utils/API.js","pages/Home.js","pages/Saved.js","pages/NoMatch.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","children","className","Card","icon","title","aria-hidden","Form","q","handleInputChange","handleFormSubmit","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","List","ListItem","Container","fluid","Row","Col","size","split","map","join","Book","subtitle","authors","link","description","image","Button","target","rel","href","src","alt","Footer","getBooks","axios","get","params","getSavedBooks","deleteBook","delete","saveBook","bookData","post","Home","state","books","message","event","setState","preventDefault","API","then","res","data","catch","err","console","log","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","this","length","key","Component","Saved","handleBookDelete","_id","NoMatch","role","aria-label","Nav","open","width","window","innerWidth","updateWidth","newState","toggleNav","addEventListener","removeEventListener","to","data-toggle","data-target","aria-controls","aria-expanded","location","pathname","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccfa79a3.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return <div className=\"jumbotron mt-4\">{children}</div>;\n}\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction Card({ icon, title, children }) {\n    return (\n        <div className=\"card mt-4\">\n            <div className=\"card-header\">\n                <h3>\n                    <strong>\n                        <i className={`fa fa=${icon}`} aria-hidden=\"true\" /> {title}\n                    </strong>\n                </h3>\n            </div>\n            <div className=\"card-body\">{children}\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\n\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"Query\">\n          <strong>Book</strong>\n        </label>\n        <input\n        className=\"form-control\"\n        id=\"Title\"\n        type=\"text\"\n        value={q}\n        placeholder=\"Search Book\"\n        name=\"q\"\n        onChange={handleInputChange}\n        required\n        />\n      </div>\n      <div className=\"pull-right\">\n        <button onClick= {handleFormSubmit}\n        type=\"submit\"\n        className=\"btn btn-lg btn-danger float-right\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;","import React from \"react\";\nimport \"./style.css\";\n\nexport const List = ({ children }) => (\n  <ul className=\"list-group\">{children}</ul>\n);\n\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}","import React from \"react\";\n\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}","import React from \"react\";\nimport { ListItem } from \"../List\";\nimport { Row, Col } from \"../Grid\";\nimport \"./style.css\";\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\n    return (\n        <ListItem>\n            <Row className=\"flex-wrap-reverse\">\n                <Col size=\"md-8\">\n                    <h3>{title}</h3>\n                    {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\n                </Col>\n                <Col size=\"md-4\">\n                    <div className=\"btn-container\">\n                        <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n                            View\n                        </a>\n                        <Button />\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col size=\"md-6\">\n                    <p className=\"font-italic small\"> Author: {authors}</p>\n                </Col>\n            </Row>\n            <Row>\n                <Col size=\"12 sm-4 md-2\">\n                    <img className=\"img-thumbnail img-fluid w-100\" src={image} alt={title} />\n                </Col>\n                <Col size=\"12 sm-8 md-10\">\n                    <p> {description} </p>\n                </Col>\n            </Row>\n        </ListItem>\n    );\n}\n\nexport default Book;","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer>\n            <hr />\n            <p className=\"text-center\">\n                <i /> GBS&S built using React\n            </p>\n        </footer>\n    );\n}\n\nexport default Footer;","import axios from \"axios\";\n\nexport default {\n \n  getBooks: function(q) {\n    return axios.get(\"/api/google\", { params: { q: \"title\" + q} });\n  },\n \n  getSavedBooks: function() {\n    return axios.get(\"/api/books/\");\n  },\n \n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n \n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nclass Home extends Component {\n  state = {\n    books: [],\n    q: \"\",\n    message: \"Search for a book\"\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.getBooks();\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.q)\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleBookSave = id => {\n    const book = this.state.books.find(book => book.id === id);\n\n    API.saveBook({\n      googleId: book.id,\n      title: book.volumeInfo.title,\n      subtitle: book.volumeInfo.subtitle,\n      link: book.volumeInfo.infoLink,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail\n\n    }).then(() => this.getBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n            \n              <h1 className=\"text-center\">Google Books Search & Save</h1>\n             <h2 className=\"text-center\">Search for a Book. Save for later.</h2> \n            </Jumbotron>\n          </Col>\n          <Col size=\"md-12\">\n            <Card title=\"Book Search\" icon=\"far fa-book\">\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Results\">\n              {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book.id}\n                      title={book.volumeInfo.title}\n                      subtitle={book.volumeInfo.subtitle}\n                      link={book.volumeInfo.infoLink}\n                      authors={book.volumeInfo.authors.join(\", \")}\n                      description={book.volumeInfo.description}\n                      image={book.volumeInfo.imageLinks.thumbnail}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookSave(book.id)}\n                          className=\"btn btn-primary ml-2\"\n                        >\n                          Save\n                        </button>\n                      )}\n                    />\n\n                  ))}\n                </List>\n              ) : (\n                  <h2 className=\"text-center\">{this.state.message}</h2>\n\n                )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n\n  }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    this.getSavedBooks();\n  }\n\n  getSavedBooks = () => {\n    API.getSavedBooks()\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleBookDelete = id => {\n    API.deleteBook(id).then(res => this.getSavedBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>Google Books Search & Save</strong>\n              </h1>\n              <h2 className=\"text-center\">Search for a Book. Save for later.</h2>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Saved Books\" icon=\"download\">\n              {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book._id}\n                      title={book.title}\n                      subtitle={book.subtitle}\n                      link={book.link}\n                      authors={book.authors.join(\", \")}\n                      description={book.description}\n                      image={book.image}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookDelete(book._id)}\n                          className=\"btn btn-danger ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                <h2 className=\"text-center\">No Books Saved</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Saved;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Not Found\">\n                \n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nclass Nav extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Home\n        </Link>\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/saved\"\n              >\n                Saved\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}